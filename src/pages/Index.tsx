import { useState } from "react";
import MentorCard from "@/components/MentorCard";
import MentorForm from "@/components/MentorForm";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";

const mockMentors = [
  {
    id: 1,
    name: "–ï–ª–µ–Ω–∞ –í–∞—Å–∏–ª—å–µ–≤–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞",
    subject: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
    experience: 15,
    specializations: ["–ê–ª–≥–µ–±—Ä–∞", "–ì–µ–æ–º–µ—Ç—Ä–∏—è", "–ï–ì–≠"],
    description:
      "–û–ø—ã—Ç–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ —Å –±–æ–ª—å—à–∏–º —Å—Ç–∞–∂–µ–º —Ä–∞–±–æ—Ç—ã –≤ —à–∫–æ–ª–µ. –ü–æ–º–æ–≥—É –æ—Å–≤–æ–∏—Ç—å —Å–ª–æ–∂–Ω—ã–µ —Ç–µ–º—ã –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º.",
    imageUrl:
      "https://images.unsplash.com/photo-1494790108755-2616b612b913?w=150&h=150&fit=crop&crop=face",
  },
  {
    id: 2,
    name: "–ú–∏—Ö–∞–∏–ª –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á –°–∏–¥–æ—Ä–æ–≤",
    subject: "–§–∏–∑–∏–∫–∞",
    experience: 12,
    specializations: ["–ú–µ—Ö–∞–Ω–∏–∫–∞", "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ", "–û–ª–∏–º–ø–∏–∞–¥—ã"],
    description:
      "–ü—Ä–µ–ø–æ–¥–∞—é —Ñ–∏–∑–∏–∫—É —É–∂–µ 12 –ª–µ—Ç. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ –æ–ª–∏–º–ø–∏–∞–¥–∞–º –∏ —É–≥–ª—É–±–ª–µ–Ω–Ω–æ–º –∏–∑—É—á–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞.",
    imageUrl:
      "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face",
  },
  {
    id: 3,
    name: "–ê–Ω–Ω–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞ –ö–æ–∑–ª–æ–≤–∞",
    subject: "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ –∏ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞",
    experience: 8,
    specializations: ["–°–æ—á–∏–Ω–µ–Ω–∏—è", "–û–ì–≠", "–ì—Ä–∞–º–º–∞—Ç–∏–∫–∞"],
    description:
      "–ú–æ–ª–æ–¥–æ–π, –Ω–æ –æ–ø—ã—Ç–Ω—ã–π –ø–µ–¥–∞–≥–æ–≥. –ò—Å–ø–æ–ª—å–∑—É—é —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥–∏–∫–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è.",
    imageUrl:
      "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face",
  },
];

const Index = () => {
  const [mentors, setMentors] = useState(mockMentors);
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedSubject, setSelectedSubject] = useState("");
  const [showForm, setShowForm] = useState(false);

  const subjects = [...new Set(mentors.map((m) => m.subject))];

  const filteredMentors = mentors
    .filter(
      (mentor) =>
        mentor.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
        mentor.subject.toLowerCase().includes(searchTerm.toLowerCase()) ||
        mentor.specializations.some((spec) =>
          spec.toLowerCase().includes(searchTerm.toLowerCase()),
        ),
    )
    .filter(
      (mentor) => selectedSubject === "" || mentor.subject === selectedSubject,
    );

  const addMentor = (newMentor: any) => {
    setMentors((prev) => [...prev, newMentor]);
    setShowForm(false);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-white to-orange-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b border-purple-100">
        <div className="max-w-7xl mx-auto px-4 py-6">
          <div className="flex flex-col md:flex-row md:items-center md:justify-between">
            <div>
              <h1 className="font-montserrat text-3xl font-bold text-gray-900 mb-2">
                –ü–µ–¥–∞–≥–æ–≥–∏<span className="text-purple-600">–ú–µ–Ω—Ç–æ—Ä</span>
              </h1>
              <p className="text-gray-600">
                –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ –≤ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏
              </p>
            </div>
            <Button
              onClick={() => setShowForm(!showForm)}
              className="mt-4 md:mt-0 bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white"
            >
              {showForm ? "–°–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É" : "–°—Ç–∞—Ç—å –º–µ–Ω—Ç–æ—Ä–æ–º"}
            </Button>
          </div>
        </div>
      </header>

      <div className="max-w-7xl mx-auto px-4 py-8">
        {/* Form Section */}
        {showForm && (
          <div className="mb-8 animate-fade-in">
            <MentorForm onSubmit={addMentor} />
          </div>
        )}

        {/* Search and Filters */}
        <div className="mb-8 bg-white rounded-lg shadow-sm border border-purple-100 p-6">
          <div className="flex flex-col md:flex-row gap-4">
            <div className="flex-1">
              <Input
                placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏, –ø—Ä–µ–¥–º–µ—Ç—É –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="border-gray-200 focus:border-purple-400"
              />
            </div>
            <div className="flex flex-wrap gap-2">
              <Badge
                variant={selectedSubject === "" ? "default" : "outline"}
                className={`cursor-pointer ${selectedSubject === "" ? "bg-purple-600" : "hover:bg-purple-50"}`}
                onClick={() => setSelectedSubject("")}
              >
                –í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã
              </Badge>
              {subjects.map((subject) => (
                <Badge
                  key={subject}
                  variant={selectedSubject === subject ? "default" : "outline"}
                  className={`cursor-pointer ${selectedSubject === subject ? "bg-purple-600" : "hover:bg-purple-50"}`}
                  onClick={() => setSelectedSubject(subject)}
                >
                  {subject}
                </Badge>
              ))}
            </div>
          </div>
        </div>

        {/* Stats */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <div className="bg-white rounded-lg p-6 text-center shadow-sm border border-purple-100">
            <div className="text-3xl font-bold text-purple-600 mb-2">
              {mentors.length}
            </div>
            <div className="text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã—Ö –º–µ–Ω—Ç–æ—Ä–æ–≤</div>
          </div>
          <div className="bg-white rounded-lg p-6 text-center shadow-sm border border-purple-100">
            <div className="text-3xl font-bold text-orange-600 mb-2">
              {subjects.length}
            </div>
            <div className="text-gray-600">–ü—Ä–µ–¥–º–µ—Ç–æ–≤</div>
          </div>
          <div className="bg-white rounded-lg p-6 text-center shadow-sm border border-purple-100">
            <div className="text-3xl font-bold text-green-600 mb-2">100%</div>
            <div className="text-gray-600">–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø–µ–¥–∞–≥–æ–≥–∏</div>
          </div>
        </div>

        {/* Mentors Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredMentors.map((mentor) => (
            <MentorCard key={mentor.id} {...mentor} />
          ))}
        </div>

        {filteredMentors.length === 0 && (
          <div className="text-center py-12">
            <div className="text-gray-400 text-lg mb-2">üîç</div>
            <p className="text-gray-500">
              –ù–µ –Ω–∞–π–¥–µ–Ω–æ –º–µ–Ω—Ç–æ—Ä–æ–≤ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É
            </p>
          </div>
        )}
      </div>
    </div>
  );
};

export default Index;
